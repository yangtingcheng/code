文件----在Linux下，所有的软件和硬件都被视为文件，因此，Linux为操作系统的各种应用和设备提供了统一的接口。Linux与Windows最大的不同是，Linux的文件名没有扩展名的概念，即文件的扩展名和它的类型没有直接的关系
Linux下的文件分为5种：
普通文件
目录文件
链接文件
      在linux系统中，内核为每一个新创建得文件分配一个inode号（索引节点），文件属性保存在索引节点里，在访问文件时，索引节点被复制到内存里，从而实现文件得快速访问。
        链接是一种共享和访问它得用户得若干目录项之间建立联系的方式，Linux中得链接包括：
       硬链接---硬链接是一个指向索引节点的指针，系统并不为它重新分配inode（目的是节省空间）。
先查看以下文件
ytc@ytc:~/study/linux/20161117$ ll
drwxrwxr-x 2 ytc ytc 4096 11月 24 15:28 ./
drwxrwxr-x 5 ytc ytc 4096 11月 22 18:41 ../
-rw-rw-r-- 1 ytc ytc   94 11月 17 20:38 test.cpp
如果要给test.cpp建立硬链接的话，输入：
ytc@ytc:~/study/linux/20161117$ ln test.cpp 1.cpp
ytc@ytc:~/study/linux/20161117$ ll
总用量 16
drwxrwxr-x 2 ytc ytc 4096 11月 24 15:28 ./
drwxrwxr-x 5 ytc ytc 4096 11月 22 18:41 ../
-rw-rw-r-- 2 ytc ytc   94 11月 17 20:38 1.cpp
-rw-rw-r-- 2 ytc ytc   94 11月 17 20:38 test.cpp
此刻注意到test.cpp的引用个数增加了一个，硬链接相当于拷贝了一份原文件。对原文件的操作都会影响到拷贝的那份文件.
	硬链接的两个限制
        1、不允许给目录创建硬链接
        2、只有在同一文件系统中的文件之间才可以创建链接
       软链接---又叫符号链接，这个文件包含了另一个文件得路径名，可以是任意文件或目录，可以链接不同文件系统的文件，类似于windows中的快捷方式。
ytc@ytc:~/study/linux/20161117$ ll
总用量 12
drwxrwxr-x 2 ytc ytc 4096 11月 24 15:35 ./
drwxrwxr-x 5 ytc ytc 4096 11月 22 18:41 ../
lrwxrwxrwx 1 ytc ytc    8 11月 24 15:35 1.cpp -> test.cpp
-rw-rw-r-- 1 ytc ytc   95 11月 24 15:34 test.cpp
可以看出硬链接和软链接形成的文件大小是不一样的，软链接储存的是原文件的路径。

设备文件
管道文件
目录----目录是一种特殊的文件，用来维护文件系统的层次结构，目录记录它所包含的文件、子目录以及与它相关的信息。一个目录文件是由一个索引节点描述的，在这个索引节点数据块中存放用来描述该目录下的所有目录项。
Linux的简单管理 
1、使用者与群组
   主要的功能是对于安全的考虑，使用者与群组是一个相当健全而好用的一个安全防护措施。
2、Linux文件属性
   对Linux的是使用者和群组了解之后，我们主要谈谈文件的权限如何针对所谓的这些使用者与群组来设定该档案的权限，这部分内容就相当的重要，因为文件的权限与属性是学习Linux的一个重要的关卡。
文件属性：
-rw-rw-r-- 1 ytc ytc    0 11月 24 15:24 linux初识
第一栏属性的详细解析：
    第一个属性代表这个文件是目录、档案或者链接文件...
    当为【d】则是目录
    为【-】则是档案
    为【l】则表示为链接文件
    为【b】则表示为装置文件里面的可供存储的接口设备
    为【c】则表示为装置文件里面的串行端口设备，如键盘、鼠标等。
接下来的属性中，三个为一组，且均为【rwx】的三个参数的组
合，【r】代表可读，【w】代表可写，【x】代表可执行:
第一组代表：拥有者的权限
第二组代表：同群组的权限
第三组代表：其他非本群组的权限

3、文件权限的改变
    chgrp:改变文件的所属群组
    chown:改变文件所属人
    chmod:改变文件的属性、SUID、SGID、Sticky等特性
    chmod [who] [operator] [mode] [文件或目录名]
     3.1文字设定法
           who: u g o a 
           operator: + - =
           mode: r w x s t
       3.2数字设定法
           chmod[n1n2n3] [文件或目录名]
           r:4
           w:2
           x:1
           -:0(没有权限)
